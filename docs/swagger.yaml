definitions:
  handler.AuthResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  handler.HTTPError:
    properties:
      message:
        type: string
    type: object
  handler.getAllItemsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/structs.Item'
        type: array
    type: object
  handler.getAllListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/structs.List'
        type: array
    type: object
  handler.getItemResponse:
    properties:
      data:
        $ref: '#/definitions/structs.Item'
    type: object
  handler.getListResponse:
    properties:
      data:
        $ref: '#/definitions/structs.List'
    type: object
  structs.Item:
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  structs.List:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  structs.RefreshTokenInput:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  structs.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  structs.SignUpInput:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
  structs.UpdateItemInput:
    properties:
      description:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
  structs.UpdateListInput:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /api/items/:id:
    put:
      consumes:
      - application/json
      description: update todo item
      operationId: update-item
      parameters:
      - description: item id
        in: path
        name: id
        required: true
        type: integer
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.UpdateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Update todo item
      tags:
      - items
  /api/lists:
    get:
      consumes:
      - application/json
      description: get all lists
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getAllListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get All Lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: create todo list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.List'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Create todo list
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: update todo list
      operationId: update-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.UpdateListInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Update todo list
      tags:
      - lists
  /api/lists/:id:
    delete:
      consumes:
      - application/json
      description: delete list by id
      operationId: delete-list-by-id
      parameters:
      - description: List id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Delete List By Id
      tags:
      - lists
    get:
      consumes:
      - application/json
      description: get list by id
      operationId: get-list-by-id
      parameters:
      - description: List id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get List By Id
      tags:
      - lists
  /api/lists/:id/items:
    get:
      consumes:
      - application/json
      description: get all items
      operationId: get-all-items
      parameters:
      - description: list id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getAllItemsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get All items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: create todo item
      operationId: create-item
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.Item'
      - description: list id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Create todo item
      tags:
      - items
  /api/lists/:id/items/:item_id:
    delete:
      consumes:
      - application/json
      description: delete item by id
      operationId: delete-item-by-id
      parameters:
      - description: list id
        in: path
        name: id
        required: true
        type: integer
      - description: item id
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Delete item
      tags:
      - items
    get:
      consumes:
      - application/json
      description: get item by id
      operationId: get-item-by-id
      parameters:
      - description: list id
        in: path
        name: id
        required: true
        type: integer
      - description: item id
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Get item by id
      tags:
      - items
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: refresh JWT token
      operationId: refresh
      parameters:
      - description: refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.RefreshTokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Refresh
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: user login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/structs.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
